@page "/player"

@using PlayerSheetApp.Data

@inject IJSRuntime _js
@inject PlayerService _playerService

<h3>球員清單</h3>

<a class="btn btn-success" href="player/create">新增球員</a>

@if (_players == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>--</th>
                <th>背號</th>
                <th>姓名</th>
                <th>生日</th>
                <th>--</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var _player in _players)
            {
                <tr>
                    <td>@_player.Id</td>
                    <td>@_player.Number</td>
                    <td>@_player.Name</td>
                    <td>@String.Format("{0:yyyy/MM/dd}", _player.BirthDay)</td>
                    <td>
                        <a class="btn btn-sm btn-primary" href="player/edit/@_player.Id">編輯</a>
                        <button class="btn btn-sm btn-danger" @onclick="@(()=> DeletePlayer(_player.Id))">刪除</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<PlayerItem> _players;

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    async Task LoadAsync()
    {
        this._players = await _playerService.GetPlayersAsync();
    }

    async Task DeletePlayer(int playerId)
    {
        if(await _js.InvokeAsync<bool>("confirm","刪除此筆資料?"))
        {
            await _playerService.DeleteAsync(playerId);
            await LoadAsync();
        }
    }
}
